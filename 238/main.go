package main

import "fmt"

// Функция для нахождения произведения всех чисел последовательности, кроме последнего
func productExceptSelf(nums []int) []int {
	out := make([]int, len(nums)) // Создаем массив, в котором будем хранить результат

	buffer := 1 // Текущий префикс
	// Заполняем результирующий массив прексными произведениями
	for i := range nums {
		out[i] = buffer
		buffer *= nums[i]
		// fmt.Println(out)
	}

	// fmt.Println()

	buffer = 1 // Текущий постфикс
	// Умножаем с конца все элементы результирующего массива на соответствующий постфикс
	for i := len(nums) - 1; i >= 0; i-- {
		out[i] *= buffer
		buffer *= nums[i]
		// fmt.Println(out)
	}

	return out
}

func main() {
	out := productExceptSelf([]int{2, 2, 3, 4})
	fmt.Println(out)
}

/* Примечание:
из-за того, что мы берем не все префексные и постфиксные произведения (все, кроме последних),
получается так, что мы находим произведения всех элементов массива для каждого элемента без него самого
*/
